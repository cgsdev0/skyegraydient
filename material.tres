[gd_resource type="ShaderMaterial" load_steps=6 format=3 uid="uid://dhxo57l6dbmv4"]

[sub_resource type="Shader" id="Shader_353bv"]
code = "shader_type canvas_item;

uniform sampler2D gradient2: source_color, filter_nearest;
uniform sampler2D gradient3: source_color, filter_nearest;

uniform int colors: hint_range(1, 3, 1) = 1;

uniform float amount: hint_range(0.0, 1.0) = 0.0;
uniform float rotation: hint_range(0.0, 360.0) = 0.0;

void fragment() {
	vec2 ndc = UV * 2.0 - 1.0;
	float theta = mod(atan(ndc.y, ndc.x) + TAU + rotation / 180.0 * PI, TAU);
	vec3 one = texture(gradient2, vec2(0.0)).rgb;
	vec3 two = texture(gradient2, vec2(UV.y, 0.0)).rgb;
	vec3 three = texture(gradient3, vec2(theta / TAU, 0.0)).rgb;
	float c = float(colors);
	vec3 rgb = one * step(c, 1.0);
	rgb += two * step(c, 2.1) * step(1.1, c);
	rgb += three * step(2.1, c);
	COLOR = vec4(mix(COLOR.rgb, rgb, amount), COLOR.a);
}"

[sub_resource type="Gradient" id="Gradient_0xm2m"]
interpolation_mode = 2
interpolation_color_space = 2
colors = PackedColorArray(1, 0, 0, 1, 0, 1, 1, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_h2yge"]
gradient = SubResource("Gradient_0xm2m")

[sub_resource type="Gradient" id="Gradient_ig7tw"]
interpolation_mode = 2
interpolation_color_space = 2
offsets = PackedFloat32Array(0.0245902, 0.204918, 0.491803, 1)
colors = PackedColorArray(0, 1, 0.933333, 1, 1, 0, 0, 1, 0.843137, 1, 0.552941, 1, 0, 1, 1, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_0xm2m"]
gradient = SubResource("Gradient_ig7tw")

[resource]
shader = SubResource("Shader_353bv")
shader_parameter/gradient2 = SubResource("GradientTexture2D_h2yge")
shader_parameter/gradient3 = SubResource("GradientTexture2D_0xm2m")
shader_parameter/colors = 1
shader_parameter/amount = 0.0
shader_parameter/rotation = 37.321
